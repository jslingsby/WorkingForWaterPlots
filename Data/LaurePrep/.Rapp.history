plot(tt[,2] ~ tt[,"time"], col=cbPalette[2], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=cbPalette[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=cbPalette[9], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=cbPalette[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=cbPalette[1], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=cbPalette[i], type="l") }
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=col[1], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=col[i], type="l") }
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[1], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[2], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[3], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[5], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[4], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[7], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[9], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[10], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l") }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[2]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[3]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[4]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[5]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[6]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[7]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[8]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,.5), )
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[9]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,.5), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[10]]
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,.5), )#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), )
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), lty=1:3)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=2:3) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=2) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), lty=1:3)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=2) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=3) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), lty=1:3)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=3) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=sample(1:3)) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), lty=1:3)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=sample(1:3)) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), lty=1:3)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=sample(1:3)) }
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), lty=1:3)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=sample(1:3)) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
l.coex
l.com.mat[[j]][[k]][[1]]
names(l.all)
id <- 10
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances
f12 <- l.traits[[id]]			# functional traits
McA$time <- 1:nrow(McA)
McA2 <- McA[seq(1000, 2499, 15),]		# select a time period
Dm <- as.matrix(dist(f12)) ; diag(Dm) <- NA
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances
head(McA)
Dm <- as.matrix(dist(l.traits[[id]])) ; diag(Dm) <- NA
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )
mfd.rank
McA$mfd <- mfd.rank
plot(mfd ~time, data=McA)
id <- 1#
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA)
plot(mfd ~time, data=McA, c=c(0,1))
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 2#
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 3#
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 4#
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 5#
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 6#
McA <- as.data.frame(l.all$l.timeAbund[[id]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
l.all$l.traits
id <- 1#
McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 2#
McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 5#
McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
dim(McA)
seq(2001, 4001, 10)
id <- 5#
# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
id <- 6#
# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
par(mfrow=4, 5)#
for(id in 1:20){#
	# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)#
}
par(mfrow=c(4,5))#
for(id in 1:20){#
	# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)#
}
par(mfrow=c(4,5))#
for(id in 1:20){#
	# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[8]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)#
}
for(id in 1:20){#
	# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)#
}
id <- 18
# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)
par(mfrow=c(4,5))#
for(id in 21:40){#
	# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)#
}
par(mfrow=c(4,5))#
for(id in 41:60){#
	# McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
	McA <- as.data.frame(l.all$l.timeAbund[[10]][seq(2001, 4001, 10),])  # time series of spc abundances#
	Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
	mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
					Dw <- sapply(1:ncol(Dm), function(y) x)#
					Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
					Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
					rlits <- sapply(1:99, function(z) {#
						NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
						Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
						return(Wr)  })						#
					return(rank(c(Wm, rlits))[1]/100)	} )#
	McA$mfd <- mfd.rank#
	plot(mfd ~time, data=McA, ylim=c(0,1), main=id)#
}
id <- 41 # 18; 29; 41; 48#
McA <- as.data.frame(l.all$l.timeAbund[[10]])  # time series of spc abundances#
Dm <- as.matrix(dist(l.all$l.traits[[id]])) ; diag(Dm) <- NA#
#
mfd.rank <- apply(McA[, 2:ncol(McA)], 1, function(x) {#
				Dw <- sapply(1:ncol(Dm), function(y) x)#
				Dw <- (Dw>0.001)*1 ; diag(Dw) <- NA#
				Wm <- weighted.mean(as.vector(Dm), as.vector(Dw), na.rm=T) #
				rlits <- sapply(1:99, function(z) {#
					NN <- 1:ncol(Dm) ; NN2 <- sample(NN)#
					Wr <- weighted.mean(as.vector(Dm[NN2, NN2]), as.vector(Dw), na.rm=T) #
					return(Wr)  })						#
				return(rank(c(Wm, rlits))[1]/100)	} )#
McA$mfd <- mfd.rank#
plot(mfd ~time, data=McA, ylim=c(0,1))
plot(mfd ~time, data=McA[2000:4000], ylim=c(0,1))
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1))
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=21, cex=.5)
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5, type="l")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5, type="d")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5, type="l")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), type="l")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), type="l")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), type="l")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), type="l")
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
par(mfrow=c(1,3))#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }#
#
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), type="l")#
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.5)
par(mfrow=c(1,3))#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }#
#
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), type="l")#
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.2)
par(mfrow=c(1,2))#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }#
#
plot(mfd ~time, data=McA[2000:4000,], ylim=c(0,1), pch=19, cex=.2)
plot(tt[,2] ~ tt[,"time"], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2, lty=sample(2:3)) }
plot(tt[,2] ~ tt[,"time"], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, lty=sample(2:3)) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=("grey", "darkgray")) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=c("grey", "darkgray")) }
plot(tt[,2] ~ tt[,"time"], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=c("grey", "darkgray")) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=c("grey", grey(0.8))) }
plot(tt[,2] ~ tt[,"time"], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=c("grey", grey(0.9))) }
plot(tt[,2] ~ tt[,"time"], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=c("grey", grey(0.1))) }
0:8 / 8
grey(0.1)
grey(0.5)
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=c("grey", "grey", "darkgrey") }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=sample(grey(c(.5, .8))) }
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], type="l", lwd=2, col=sample(grey(c(.5, .8)))) }
# The abundance through time#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:(ncol(tt)-1)){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:6){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[3]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:6){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[3]]#
#
COL <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a')#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
l.all$Stats
tt <- l.all$l.timeAbund[[7]]#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[12]]#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[14]]
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
tt <- l.all$l.timeAbund[[15]]
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
l.all$Stats$id <- 1:55
l.all$Stats
l.all$Stats[which(l.all$Stats$rich==5),]
l.all$Stats[which(l.all$Stats$rich==5),]$id
for(j in l.all$Stats[which(l.all$Stats$rich==5),]$id)#
	tt <- l.all$l.timeAbund[[j]]#
	plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), main=j)#
	for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }#
}
par(mfrow=c(2, 4))#
for(j in l.all$Stats[which(l.all$Stats$rich==5),]$id)#
	tt <- l.all$l.timeAbund[[j]]#
	plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), main=j)#
	for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }#
}
par(mfrow=c(2, 4))#
for(j in l.all$Stats[which(l.all$Stats$rich==5),]$id){#
	tt <- l.all$l.timeAbund[[j]]#
	plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), main=j)#
	for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }#
}
l.all$Stats[which(l.all$Stats$rich==5),]$id
tt <- l.all$l.timeAbund[[j]]
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), main=j)
for (i in 2:11){  points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2) }
for(i in 2:11) points(tt[, i + 1] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
for(i in 2:11) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
par(mfrow=c(2, 4))#
for(j in l.all$Stats[which(l.all$Stats$rich==5),]$id){#
	tt <- l.all$l.timeAbund[[j]]#
	plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), main=j)#
	for(i in 2:11) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)#
}
par(mfrow=c(2, 4))#
for(j in l.all$Stats[which(l.all$Stats$rich==5),]$id){#
	tt <- l.all$l.timeAbund[[j]]#
	plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)#
	for(i in 2:11) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)#
}
tt <- l.all$l.timeAbund[[14]]
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)
for(i in 2:11) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
tail(tt)
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)
for(i in 2:7) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
COL <- c('#66c2a5','#fc8d62','#8da0cb','#e78ac3','#a6d854')
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)#
for(i in 2:7) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
COL <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00')
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]#
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)#
for(i in 2:7) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)#
for(i in 3:7) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
head(tt)
for(i in 3:6) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)
for(i in 3:6) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)
l.all$Stats$id <- 1:55#
par(mfrow=c(2, 4))#
for(j in l.all$Stats[which(l.all$Stats$rich==5),]$id){#
	tt <- l.all$l.timeAbund[[j]]#
	plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)#
	for(i in 2:11) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)#
}
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]
tt
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50), main=j)
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]
tt[,2]
tt[,"time"]
plot(tt[,2] ~ tt[,"time"], col=COL[8], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))
l.all$Stats
tt <- l.all$l.timeAbund[[14]]
tail(tt)
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]
tail(tt)
COL <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00')#
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]#
plot(tt[,2] ~ tt[,"time"], col=COL[1], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1))#
for(i in 2:6) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
plot(tt[,2] ~ tt[,"time"], col=COL[1], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50))
for(i in 2:6) points(tt[, i] ~ tt[,"time"], col=COL[i], type="l", lwd=2)
COL[i]
COL <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00')#
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]#
plot(tt[,2] ~ tt[,"time"], col=COL[1], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50))#
for(i in 3:6) points(tt[, i] ~ tt[,"time"], col=COL[i-1], type="l", lwd=2)
COL <- sample(c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00'))#
tt <- l.all$l.timeAbund[[14]][,c(1:4,6,8)]#
plot(tt[,2] ~ tt[,"time"], col=COL[1], type="l", lwd=2, xlab="time", ylab="Density of Species", ylim = c(0,1), xlim=c(0,50))#
for(i in 3:6) points(tt[, i] ~ tt[,"time"], col=COL[i-1], type="l", lwd=2)
library(picante)#
library(deSolve) # package for solving ODEs in R#
# function to integrate differential equations#
ReplRPS <- function(t, state, CompMat){#
	n <- nrow(CompMat) 			# nb spc#
	K <- as.matrix(CompMat)		# comp Matrix#
	ps <- as.numeric(state)		# abundance of the species#
	avgGrowth <- t(ps) %*% K %*% ps # will be used later to avoid rounding errors (cf "NOTES" below)#
	pnew <- rep(0, n)			# outputs#
  	for(Species in 1:n){			# For each species#
    		pnew[Species] <- ps[Species] * (( K %*% ps)[Species] - avgGrowth)  #
  	}#
  	list(pnew)#
}#
###################################################################
###################################################################
# Test for 10 species pool and 3 species IT#
###################################################################
###################################################################
#
# set up the parameters#
nbSP <- 10  # species pool#
REP <- 500#
Ntraits <- 100 # nb of traits
setwd("~/Dropbox/Travail WSL/4.Small projects/9.PeterAdler/3.Simulations/3.AllesinaModel_models/0.SimulOpinion/Output_Bigram/")
load(paste("BigRamParam_", nbSP, "spcPool_", Ntraits, "traitSim_", length(itId), "Rep_10Nov16", sep=""))
load(paste("BigRamParam_", nbSP, "spcPool_", Ntraits, "traitSim_", length(itId), "Rep_10Nov16", sep=""))
load(paste("BigRamParam_", nbSP, "spcPool_", Ntraits, "traitSim_100Rep_10Nov16", sep=""))
l.tr <- l.all$l.traits#
l.Pos <- l.all$l.spcPosition#
l.mat <- l.all$l.compMat=#
l.coex <- l.all$l.timeAbund#
EndSpc <- EndSpc#
Stats <- Stats#
itId <- itId
l.tr <- l.all$l.traits#
l.Pos <- l.all$l.spcPosition#
l.mat <- l.all$l.compMat=#
l.coex <- l.all$l.timeAbund#
EndSpc <- l.all$EndSpc#
Stats <- l.all$Stats#
itId <- l.all$itId
l.tr <- l.all$l.traits#
l.Pos <- l.all$l.spcPosition#
l.mat <- l.all$l.compMat#
l.coex <- l.all$l.timeAbund#
EndSpc <- l.all$EndSpc#
Stats <- l.all$Stats#
itId <- l.all$itId
itId
l.Pos
itId
Stats
l.coex
names(l.coex)
head(l.coex[[1]])
itID
itId
head(l.coex[[2]])
head(l.res[[2]])
Stats
lid=2
l.res <- list()
l.res <- list()
# species position#
	cid <- l.Pos[[lid]]#
	# Re-order the traits per species and calculate distance matrix#
	l.dist <- lapply(l.tr, function(x) {T1 <- x[,1] ; names(T1) <- cid[,1] ; T1 <- T1[as.character(1:nbSP)]#
										T2 <- x[,2] ; names(T2) <- cid[,2] ; T2 <- T2[as.character(1:nbSP)]#
										T3 <- x[,3] ; names(T3) <- cid[,3] ; T3 <- T3[as.character(1:nbSP)]#
										return(as.matrix(dist(cbind(T1, T2, T3) )) ) } )#
	# Extract the community data #
	cxi <- l.coex[[lid]]#
	cxi2 <- cxi[seq(3000, 3999, 10),]	#
	cxi3 <- as.data.frame(apply(cxi2, c(1,2), function(x) round(x,2)))#
#
	# calculate the mfd.ses along a large time period#
	mfd.rep <- sapply(l.dist, function(x) ses.mpd(cxi3[,2:(nbSP+1)], x, "taxa.labels", F, runs=99)[,"mpd.obs.p"])#
	wmfd.rep <- sapply(l.dist, function(x) ses.mpd(cxi3[,2:(nbSP+1)], x, "taxa.labels", T, runs=99)[,"mpd.obs.p"])#
	mntd.rep <- sapply(l.dist, function(x) ses.mntd(cxi3[,2:(nbSP+1)], x, "taxa.labels", T, runs=99)[,"mntd.obs.p"])#
#
	l.res[[as.character(lid)]] <- list(mfd=mfd.rep, wmfd=wmfd.rep, mntd=mntd.rep)#
	print(lid)
library(reshape2)#
setwd("~/Dropbox/GIT/2016_CapeCom/Data/LaurePrep/")
